syntax = "proto3";

package netdataproto;

option go_package = "git.sgu.ru/sgu/netdataserv/netdataproto";
option java_package = "ru.sgu.git.netdataserv";

message StaticHost {
    reserved 10, 11;
    int64 host_id = 1;
    string name = 2;
    string mac_address_string = 3;
    repeated string ipv4_address = 4;
    string ipv4_next_server = 5;
    string boot_filename = 6;
    repeated string static_ipv6_address = 7;
    repeated string known_duid = 8;
    BootParameters boot_parameters = 9;
    UnattendedSite unattended_site = 12;
    UnattendedClass unattended_class = 13;
    SavedBeforeContestSettings saved_before_contest_settings = 14;
    Network network = 15;
}

message IPV4Range {
    string start = 1;
    string end = 2;
}

message Network {
    int64 id = 1;
    string ipv4_cidr = 2;
    string ipv4_router = 3;
    IPV4Range ipv4_range = 4;
    bool allow_unknown_clients = 5;
    int64 vlan = 6;
    string name = 7;
}

message NetworkSwitch {
    string name = 1;
    string ipv4_address = 2;
}

message NetworkAdapterProperties {
    repeated string mac_address_string = 1;
    repeated string ip_address_string = 2;
}

message Match {
    oneof match {
        NetworkAdapterProperties network_adapter_properties = 1;
        string host_name = 2;
        int64 host_id = 3;
    }
}

message NetworkMatch {
    oneof match {
        int64 network_id = 1;
        string network_name = 2;
        int64 vlan_id = 3;
    }
}

message GetMatchingHostRequest {
    Match match = 1;
}

message GetMatchingHostResponse {
    repeated StaticHost host = 1;
}

message BootParameters {
    enum BootStage {
        DEFAULT = 0;
        DEPLOY = 1;
        DEPLOY_LOCAL = 2;
        BUILD = 3;
        BUILD_LOCAL = 4;
        CAPTURE = 5;
        BACKUP = 7;
        RESTORE = 8;
    }
    BootStage boot_stage = 1;
    enum LocalbootType {
        LOCALBOOT_0 = 0;
        LOCALBOOT_MINUS_1 = 1;
        ABORTPXE = 2;
        CHAIN_C32_HD0 = 3;
    }
    LocalbootType localboot_type = 2;
}

message GetNetworkSwitchesRequest {
    
}

message GetNetworkSwitchesResponse {
    repeated NetworkSwitch switch = 1;
    int64 timestamp_unix_nanoseconds = 2;
}

message UnattendedSite {
    int64 id = 1;
    string tftp_root = 2;
    string deploy_share = 3;
    string capture_share = 4;
    string backup_share = 5;
    string restore_share = 6;
}

message UnattendedClass {
    int64 id = 1;
    reserved 2,3,4,5,6,7,8,10;
    string name = 9;
    UnattendedOSImage unattended_os_image = 11;
    WindowsXMLTemplate deploy_template2 = 12;
}

message UnattendedSchedule {
    reserved 1;
    string postexec = 2;
    message Action {
        string command = 1;
        bool reboot = 2;
    }
    repeated Action actions = 3;
    repeated Action final = 4;
    int64 id = 5;
    string name = 6;
}

message UnattendedSource {
    enum Arch {
        ARCH_UNKNOWN = 0;
        X86_64 = 1;
        I686 = 2;
    }

    enum WinPEVersion {
        WINPE_UNKNOWN = 0;
        WINPE8 = 8;
        WINPE10 = 10;
    }

    int64 id = 1;
    string name = 2;
    Arch arch = 3;
    WinPEVersion winpe_version = 4;
    string language = 5;
}

message WindowsXMLTemplate {
    int64 id = 1;
    string name = 2;
    bytes content = 3;
}

message UnattendedOSImage {
    int64 id = 1;
    string name = 2;
    WindowsXMLTemplate build_template = 3;
    UnattendedSchedule schedule = 4;
    UnattendedSource source = 5;
    bool has_drivers = 6;
}

message SavedBeforeContestSettings {
    int64 network_id = 1;
    string ipv4_address = 2;
    string name = 3;
}

service NetData {
    rpc GetMatchingHost(GetMatchingHostRequest) returns (GetMatchingHostResponse) {}
    rpc GetNetworkSwitches(GetNetworkSwitchesRequest) returns (GetNetworkSwitchesResponse) {}
}
